{"version":3,"sources":["Bookinfo/BookInfo.js","Booklists/Booklists.js","Forms/Forms.js","App.js","index.js"],"names":["Bookinfo","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","class","target","href","concat","props","imageUrl","alt","title","src","image","author","price","description","Component","Booklists","bookInfo","arrayLength","books","map","book","index","Bookinfo_BookInfo","get","saleability","ebook","printType","Forms","_this","call","updateBookType","bookType","setState","_this$state","state","input","url","options","method","process","API_KEY","headers","Content-Type","fetch","then","res","console","log","json","data","fetchData","catch","err","errorMessage","message","updatePrintType","_this$state2","e","_this2","preventDefault","_this3","onSubmit","handleSubmit","name","id","type","placeholder","onChange","htmlFor","App","items","totalItems","src_Forms_Forms","src_Booklists_Booklists","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.29fa9ebd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './BookInfo.css'\n\nexport class Bookinfo extends Component {\n    render() {\n        return (\n            <div className='lists'>\n                <div class=\"img\">\n                    <a target={`_blank`} href={`${this.props.imageUrl}`}><img alt={`${this.props.title}`} src={`${this.props.image}`}/></a>\n                </div>\n                <div className='lists-text-container'>\n                    <h1>{this.props.title}</h1>\n                    <p>Author: {this.props.author}</p>\n                    <p>Price: ${this.props.price}</p>\n                    <p>{this.props.description}</p>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default Bookinfo\n","import React, { Component } from 'react'\nimport BookInfo from '../Bookinfo/BookInfo'\nimport get from 'get-value'\n\nexport class Booklists extends Component {\n\n    render() {\n        const bookInfo = this.props.arrayLength !== 0 ? this.props.books.map((book,index) => {\n            return <BookInfo \n                        key={get(book,'id')}\n                        title={get(book,'volumeInfo.title')}\n                        author={get(book,'volumeInfo.authors')}\n                        price={get(book,'saleInfo.listPrice.amount',0)}\n                        saleability={get(book,'saleInfo.saleability')}\n                        ebook={get(book,'saleInfo.isEbook')}\n                        description={get(book,'searchInfo.textSnippet')}\n                        image={get(book,'volumeInfo.imageLinks.thumbnail', '')}\n                        imageUrl={get(book,'volumeInfo.infoLink')}\n                        printType={get(book,'volumeInfo.printType')}\n                    />\n        }) : ''\n\n        return (\n            <div className=\"book-lists\">\n                {bookInfo}\n            </div>\n        )\n    }\n}\n\nexport default Booklists\n","import React, { Component } from 'react'\nimport './Forms.css'\n\nexport class Forms extends Component {\n    constructor(){\n        super()\n        this.state = {\n            input: '',\n            bookType: 'ebooks',\n            printType: 'all',\n            errorMessage: ''\n        }\n    }\n\n    updateBookType = bookType => {\n\n        this.setState({\n            bookType\n        })\n\n        const {input, printType} = this.state;\n        const url = `https://www.googleapis.com/books/v1/volumes?q=${input}+intitle:${input}&filter=${bookType}&printType=${printType}`;\n        const options = {\n          method: 'GET',\n          key: process.env.API_KEY,\n          headers: {\n            'Content-Type': `application/json`,\n          },\n        };\n\n        fetch(url, options)\n            .then(res => {\n                console.log(res);\n                return res.json();\n            })\n            .then(data => {\n                console.log(data);\n                this.props.fetchData(data);\n            })\n            .catch(err => {\n                console.log(`error message is `,err);\n                this.setState({\n                    errorMessage: err.message\n                })\n            })\n    }\n\n    updatePrintType = printType => {\n\n        this.setState({\n            printType\n        })\n\n        const {input, bookType} = this.state;\n        const url = `https://www.googleapis.com/books/v1/volumes?q=${input}+intitle:${input}&printType=${printType}&filter=${bookType}`;\n        console.log(url);\n        const options = {\n          method: 'GET',\n          key: process.env.API_KEY,\n          headers: {\n            'Content-Type': `application/json`,\n          },\n        };\n\n        fetch(url, options)\n            .then(res => {\n                console.log(res);\n                return res.json();\n            })\n            .then(data => {\n                console.log(data);\n                this.props.fetchData(data);\n            })\n            .catch(err => {\n                console.log(`error message is `,err);\n                this.setState({\n                    errorMessage: err.message\n                })\n            })\n\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        const {input} = this.state;\n        const url = `https://www.googleapis.com/books/v1/volumes?q=${input}+intitle:${input}`;\n        const options = {\n          method: 'GET',\n          key: process.env.API_KEY,\n          headers: {\n            'Content-Type': `application/json`,\n          },\n        };\n\n        fetch(url, options)\n            .then(res => {\n                console.log(res);\n                return res.json();\n            })\n            .then(data => {\n                console.log(data);\n                this.props.fetchData(data);\n            })\n            .catch(err => {\n                console.log(`error message is `,err);\n                this.setState({\n                    errorMessage: err.message\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='search-container'>\n                    <span>Search:</span>\n                    <form onSubmit={e => this.handleSubmit(e)}>\n                        <input \n                            name=\"search\" \n                            id=\"search\" type=\"text\" \n                            placeholder=\"search for books\" \n                            value={this.state.input} \n                            onChange={e => this.setState({input: e.target.value})}/>\n                        <button type=\"submit\">Search</button>\n                    </form>\n                </div>\n                <div className='filter-container'>\n                    <form>\n                        <label htmlFor=\"print-type\">Print Type: </label>\n                        <select id=\"print-type\"  onChange={e => this.updatePrintType(e.target.value)}>\n                            <option value=\"all\">All</option>\n                            <option value=\"books\">Books</option>\n                            <option value=\"magazines\">Magazines</option>\n                        </select>\n                        <label htmlFor=\"book-type\">Book Type:</label>\n                        <select id=\"book-type\"  onChange={e => this.updateBookType(e.target.value)}>\n                            <option value=\"ebooks\">No Filter</option>\n                            <option value=\"free-ebooks\">Free eBooks</option>\n                            <option value=\"paid-ebooks\">Paid eBooks</option>\n                        </select>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Forms\n","import React, { Component } from 'react'\nimport Booklists from './Booklists/Booklists'\nimport Forms from './Forms/Forms'\nimport './App.css'\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      books: [],\n      totalItems: 0,\n    }\n  }\n\n  fetchData = data => {\n    this.setState({\n      books: data.items,\n      totalItems: data.totalItems\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='container'>\n          <h1 className='google-title'>Google Book Search</h1>\n        </div>\n        <Forms fetchData={this.fetchData}/>\n        <Booklists books={this.state.books} arrayLength={this.state.totalItems}/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}